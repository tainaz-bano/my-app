{"version":3,"sources":["MyComponents/NavBar.js","MyComponents/TextForm.js","MyComponents/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","className","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","style","width","height","onClick","changeColor","role","toggle","htmlFor","TextForm","useState","text","settext","color","heading","backgroundColor","value","onChange","event","target","rows","autoFocus","placeholder","btn","toUpperCase","toLowerCase","replace","word","index","document","getElementById","select","navigator","clipboard","writeText","newText","trim","split","filter","e","length","Alert","alert","lower","charAt","slice","capital","msg","App","setmode","setalert","setbtn","showAlert","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.90136c93.chunk.js","sourcesContent":["import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function NavBar(props) {\r\n  \r\n  return (\r\n\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n          <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                </li>\r\n              </ul>\r\n              {/* <form className=\"d-flex\">\r\n                <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n              </form> */}\r\n              <button type=\"button\" className=\"btn btn-danger mx-4\" id='danger' style={{width:\"40px\", height: \"20px\"}} onClick={props.changeColor}></button>\r\n              <button type=\"button\" className=\"btn btn-warning mx-4\" id='warning' style={{width:\"40px\", height: \"20px\"}} onClick={props.changeColor}></button>\r\n              <button type=\"button\" className=\"btn btn-info mx-4 blue\" id='info' style={{width:\"40px\", height: \"20px\"}} onClick={props.changeColor}></button>\r\n\r\n              <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggle} id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"> {props.mode} Mode Enabled</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n  );\r\n}\r\n","import React,{useState} from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    const [text, settext] = useState(\"\");\r\n    const upper = () =>\r\n    {\r\n      settext(text.toUpperCase());\r\n    }\r\n    const lower = () =>\r\n    {\r\n      settext(text.toLowerCase());\r\n    }\r\n    const clear = () =>\r\n    {\r\n      settext(\"\");\r\n    }\r\n    const camelcase= () => {\r\n        settext( text.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\r\n            return index === 0 ? word.toLowerCase() : word.toUpperCase();\r\n          }).replace(/\\s+/g, ''))\r\n        \r\n      }\r\n      const Copy = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n    const handleExtraSpaces = ()=>{\r\n      const newText = text.replace(/\\s+/g, ' ').trim();\r\n      settext(newText)\r\n      }\r\n    const handleOnChange = (event) =>\r\n    {\r\n        settext(event.target.value);\r\n    }\r\n  return (\r\n      <>\r\n      <div className=\"container my-3\"  >\r\n          <h1 style={{color : props.mode==='dark'?'white':'black'}}> {props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n            <textarea className= \"form-control\" style={{backgroundColor : props.mode==='dark'?'#181818':'white', color : props.mode==='dark'?'white':'black'}} id=\"myBox\" value={text} onChange={handleOnChange} rows=\"9\" autoFocus placeholder='Enter text here'    ></textarea>\r\n        </div>\r\n        <button className={`btn btn-${props.btn} mx-2`} onClick={upper} >UpperCase</button>\r\n        <button className={`btn btn-${props.btn} mx-2`} onClick={lower}>LowerCase</button>\r\n        <button className={`btn btn-${props.btn} mx-2`} onClick={camelcase}>CamelCase</button>\r\n        <button className={`btn btn-${props.btn} mx-2`} onClick={clear}>Clear</button>\r\n        <button className={`btn btn-${props.btn} mx-2`} onClick={Copy}>Copy</button>\r\n        <button className={`btn btn-${props.btn} mx-2`} onClick={handleExtraSpaces}>Extra Space</button>\r\n\r\n        </div> \r\n       <div className=\"container my-4\" style={{color : props.mode==='dark'?'white':'black'}}>\r\n           <h1>Summary</h1>\r\n           <p>{text.split(\" \").filter((e) => { return e.length !==0}).length} words and {text.length}  characters</p>\r\n       </div>\r\n       <div className=\"container my-3\"  style={{color : props.mode==='dark'?'white':'black'}}>\r\n           <h1>Preview</h1>\r\n           <p>{text}</p>\r\n       </div>\r\n    </>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Alert(props) {\r\n    const capital= (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capital(props.alert.type)}</strong> : {props.alert.msg}\r\n            </div>\r\n  );\r\n}\r\n","\nimport './App.css';\n// import About from './MyComponents/About';\nimport NavBar from './MyComponents/NavBar';\nimport TextForm from './MyComponents/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './MyComponents/Alert';\n\n\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n  const [btn, setbtn] = useState('primary');\n  const showAlert= (msg , type) => {\n    setalert({\n      msg : msg,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 2000);\n  }\n  const toggle=() =>{\n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor='#101010';\n      setbtn('primary')\n      showAlert(\"Dark Mode\", \"success\")\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor ='white'\n      setbtn('primary')\n      showAlert(\"Light Mode\", \"success\")\n    }\n  }\n\n  const changeColor= (e) =>{\n    const colorbtn =e.target.id;\n    switch(colorbtn){\n      case 'danger':\n        document.body.style.backgroundColor ='#c41b1b'\n        setbtn('dark')\n        break;\n      case 'warning':\n        document.body.style.backgroundColor ='#c8e026'\n        setbtn('dark')\n        break;\n      case 'info':\n        document.body.style.backgroundColor ='#2588a1'\n        setbtn('dark')\n        break;  \n      default:\n        document.body.style.backgroundColor ='white'\n        break;   \n    }\n  }\n  return (\n  <>\n     <NavBar title=\"TextUtils\" mode={mode} toggle={toggle} changeColor={changeColor}/>\n      <Alert alert={alert}/>\n      <TextForm heading=\"Drop Your Text\" mode={mode} btn={btn}/>\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}